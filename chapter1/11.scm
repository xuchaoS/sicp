(define (f n)
  (if (< n 3)
    n
    (+ (f (- n 1))
       (* 2 (f (- n 2)))
       (* 3 (f (- n 3))))))

(define (g n)
  (g-iter 2 1 0 n))
(define (g-iter a b c n)
  (if (= 0 n)
    c
    (g-iter (+ a (* 2 b) (* 3 c)) a b (- n 1))))

(f 1)
(g 1)
(f 2)
(g 2)
(f 3)
(g 3)
(f 4)
(g 4)
(f 5)
(g 5)
(f 6)
(g 6)
(f 7)
(g 7)
(f 8)
(g 8)
(f 9)
(g 9)
(f 10)
(g 10)
